#!/bin/bash --login
#SBATCH --time=02:00:00
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=1
#SBATCH --mem-per-cpu=1g
#SBATCH --job-name (<EXP_NAME>)
#SBATCH --array=1-500
#SBATCH --output=(<SCRATCH_SLURM_OUT_DIR>)/slurm-%A_%a.out

IS_MOCK=0
LOAD_MODULES=1
while getopts "ml" opt; do
  case $opt in
    m)
     IS_MOCK=1
      ;;
    l)
     LOAD_MODULES=0
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      ;;
  esac
done


# If this is a mocked job 
if [ ${IS_MOCK} -gt 0 ]
then
  if [ -z "${SLURM_ARRAY_TASK_ID}" ]
  then
    SLURM_ARRAY_TASK_ID=1
    echo "SLURM_ARRAY_TASK_ID not defined, setting to ${SLURM_ARRAY_TASK_ID}"
  fi
fi

# Load the necessary modules
if [ ${LOAD_MODULES} -gt 0 ]
then
  module purge
  module load GCC/12.3.0
  module load OpenMPI/4.1.5-GCC-12.3.0
  module load R/4.3.2-gfbf-2023a
fi

# Variables, defined by launch script 
EXP_NAME=(<EXP_NAME>)
SCRATCH_EXP_DIR=(<SCRATCH_EXP_DIR>)
SCRATCH_FILE_DIR=(<SCRATCH_FILE_DIR>)
REP_ID=(<REP_ID>)

# Use these variables to create a few helper variables
ZERO_PADDED_TASK_ID=$( ${SCRATCH_FILE_DIR}/zero_pad.sh ${REP_ID} 3 )
SCRATCH_JOB_DIR=${SCRATCH_EXP_DIR}/reps/${ZERO_PADDED_TASK_ID}
# Load global helper functions
. ${SCRATCH_FILE_DIR}/helper_functions.sh

# Calculate the replicate's seed
SEED_BASE=$( exp_name_to_seed ${EXP_NAME} )
SEED=$(( ${SEED_BASE} + (${REP_ID} * 10000) ))
echo "Random seed: ${SEED}: Replicate ID: ${REP_ID}"

# Create replicate-specific directories
mkdir -p ${SCRATCH_JOB_DIR}
cd ${SCRATCH_JOB_DIR}

######## MAIN ########
# Do the main experiment for this replicate here

NUM_TRIALS=50

mkdir -p replays

replay_gen=$((${SLURM_ARRAY_TASK_ID} * 100))
echo "Replaying generation ${replay_gen}"
for trial_id in $(seq 1 ${NUM_TRIALS})
do
    echo "Starting trial ${trial_id}"
    trial_seed=$((${SEED} + ${replay_gen} + ${trial_id} ))

    # Run!
    ${SCRATCH_FILE_DIR}/MABE \
        -f ${SCRATCH_FILE_DIR}/replay.mabe \
        -s random_seed=${trial_seed} \
        -s replay_gen=${replay_gen}\
        -s fit_file.filename=\"replay_${replay_gen}__trial_${trial_id}.csv\"
done

# Print slurm info if this is not a mock job
if [ ${IS_MOCK} -eq 0 ]
then
  scontrol show job $SLURM_JOB_ID
fi
